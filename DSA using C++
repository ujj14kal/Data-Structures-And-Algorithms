//Basics of Datatype


#include <iostream> // Header file for input output functions
using namespace std;

int main(){

    cout<<"Ujjwal";
    return 0;
}



#include <bits/stdc++.h>     // Inlcudes all standard libraries
using namespace std;    // Standard namespace

int main(){
int x,y;
    cin>>x>>y;
    cout<<"x: "<<x<<"y: "<<y;
    return 0;
}




// Euclidean Algorithm to find GCD of two numbers


// --> if two numbers exist (a,b) where a>b the gcd is equal to gcd of (a-b,b) or (a%b,b)

class Solution {
public:
    int GCD(int a,int b) {
  while(a>0 && b>0){
      if(a>b){
          a=a%b;
      }
      else{
          b=b%a;
      }
  }
  if(a==0){
      return b;
  }
  else {return a;}
}
    };



// FINDING MAJORITY ELEMENT USING HASHMAP.




class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n=nums.size();
        unordered_map<int,int>hash;

        for(int i=0;i<n;i++){
            hash[nums[i]]++;
        }

        for(auto it: hash){
            if(it.second>n/2){
                return it.first;
            }
        }
        return -1;
    }
};



//positive numbers on even index and odd on odd index.

class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        int n = nums.size();
        int posIndex = 0, negIndex = 1;


        vector<int> copy = nums;

        for (int i = 0; i < n; i++) {
            if (copy[i] > 0) {
                nums[posIndex] = copy[i];
                posIndex += 2;
            } 
            else {
                nums[negIndex] = copy[i];
                negIndex += 2;
            }
        }

        return nums;
    }
};




//Kadanes Algorithm to find maximum subarray sum.


class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int maxi=INT_MIN;
        int sum=0;
        int i,start;
        int anstart,ansend=-1;


        for(i=0;i<nums.size();i++){
            if(sum==0){start=i;}
            sum+=nums[i];

            if(sum>maxi){
                maxi=sum;
                anstart=start;
                ansend=i;
            }

            if(sum<0){sum=0;}
        }
        return maxi;
    }
};




